#数据库
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql.com:3306/sell?useUnicode=true&characterEncoding=utf-8&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root

#暂时关闭session 分布式管理
spring.session.store-type=none
#session失效时间内
#server.servlet.session.timeout=120 必须要60s以上 如果没有那么也是会默认1分钟 ,默认半个小时

#REDIS 集群配置
#spring.redis.cluster.nodes=redis.com:7000,redis.com:7001,redis.com:7002,redis.com:7003,redis.com:7004,redis.com:7005
#spring.redis.timeout=6000ms
#spring.redis.password=passwd123
#spring.redis.lettuce.pool.max-active=8
#spring.redis.lettuce.pool.max-wait=-1
#spring.redis.lettuce.pool.max-idle=8
#spring.redis.lettuce.pool.min-idle=0
#spring.redis.database=0

#配置该应用的id和secert
security.oauth2.client.client-id=ssoClinet1
security.oauth2.client.client-secret=ssoClinetpw
#获取授权码的回调地址 这个需要配置在服务端
#security.oauth2.client.registered-redirect-uri=http://localhost:7020/login
#去授权服务进行授权的地址
security.oauth2.client.user-authorization-uri=http://localhost:7019/oauth/authorize
#去授权服务获取token的地址
security.oauth2.client.access-token-uri=http://localhost:7019/oauth/token
#拿到jwt 去解析 jwt 获取用户信息， 需要访问的秘钥的服务地址
security.oauth2.resource.jwt.key-uri=http://localhost:7019/oauth/token_key


